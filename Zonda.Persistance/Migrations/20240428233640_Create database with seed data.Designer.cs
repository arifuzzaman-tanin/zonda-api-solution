// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zonda.Persistance;

#nullable disable

namespace Zonda.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240428233640_Create database with seed data")]
    partial class Createdatabasewithseeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zonda.Application.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa15ddf8-bbfd-4709-b3a1-ba5b8b89d3bc"),
                            Address = "17 lascelles boulevard, toronto, on, canada",
                            Contact = "437-460-XXXX",
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Arifuzzaman Tanin"
                        },
                        new
                        {
                            Id = new Guid("c61c5694-cbf1-483f-8d1d-8016184483e6"),
                            Address = "17 lascelles boulevard, toronto, on, canada",
                            Contact = "437-578-XXXX",
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Shanta Akther Saniya"
                        });
                });

            modelBuilder.Entity("Zonda.Application.Entities.CustomerOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("Zonda.Application.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa15ddf8-bbfd-4709-b3a1-ba5b8b89d3bc"),
                            Code = 1,
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Full HD 1080p Webcam",
                            Price = 300m
                        },
                        new
                        {
                            Id = new Guid("31da689c-6ff7-4057-afdc-9ab022629cd3"),
                            Code = 2,
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Monitor Stand",
                            Price = 50m
                        },
                        new
                        {
                            Id = new Guid("597056d7-5726-4f6f-a0a9-7ed8e8869d1d"),
                            Code = 3,
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Keyboard with Palm Rest",
                            Price = 49m
                        },
                        new
                        {
                            Id = new Guid("1b40ad6a-36f3-4b1f-b896-505c1bb6003c"),
                            Code = 4,
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "H390 Wired Headset for PC/Laptop",
                            Price = 29m
                        },
                        new
                        {
                            Id = new Guid("edce20cc-4090-49da-b75c-53b1eb69a83a"),
                            Code = 5,
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Canon PIXMA TS3420 Printer",
                            Price = 69m
                        },
                        new
                        {
                            Id = new Guid("0822d701-156f-4542-801b-9e1eab52d06b"),
                            Code = 6,
                            CreatedOn = new DateTime(2024, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sportneer Bike Lock",
                            Price = 33m
                        });
                });

            modelBuilder.Entity("Zonda.Application.Entities.CustomerOrder", b =>
                {
                    b.HasOne("Zonda.Application.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zonda.Application.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
